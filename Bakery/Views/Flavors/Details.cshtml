@{
  Layout = "_Layout";
}
@using Bakery.Models
@model Bakery.Models.Flavor

<div class="d-flex align-items-center">
  <h1 class="p-2">@Html.DisplayFor(model => model.Type) Flavor Details</h1>

  <!-- Delete form -->
  @using (Html.BeginForm("Delete", "Flavors"))
  {
      @Html.HiddenFor(model => model.FlavorId)
      <input type="submit" value="Delete Flavor" class="btn btn-danger"/>
  }

  <!-- Link to edit flavor -->
  <span class="p-2">@Html.ActionLink("Edit Flavor", "Edit", new { id = Model.FlavorId })</span>
</div>

<!-- List treats of this flavor type -->
<table class="table">
  <thead>
    <th>@Html.DisplayFor(model => model.Type) Treats</th>
    <th>Manage</th>
  </thead>
  @if (Model.FlavorTreats.Count != 0)
  {
    @foreach (FlavorTreat flavTreat in Model.FlavorTreats)
    {
      <tr>
        <td>
          @Html.ActionLink($"{flavTreat.Treat.Name}", "Details", "Treats", new { id = flavTreat.Treat.TreatId })
        </td>
        <td>
          <!-- Remove Treat -->
          @using (Html.BeginForm("RemoveTreat","Flavors", routeValues: new { id = flavTreat.FlavorTreatId }))
          {
            <input type="submit" value="Remove from Flavor"/>
          }
        </td>
      </tr>
    }
  }
  else
  {
    <tr>
      <td>
        <p>No @Html.DisplayFor(model => model.Type) treats have been added yet.</p>
      </td>
    </tr>
  }

</table>




<h2>Add @Html.DisplayFor(model => model.Type) Treat</h2>
@using (Html.BeginForm("AddTreat", "Flavors"))
{
  @Html.HiddenFor(model => model.FlavorId)

  @Html.DropDownList("TreatId")
  <input type="submit" value="Add Treat"/>
}
